server.port=9090

# Niveles de log (reducidos para claridad)
logging.level.org.springframework.cloud.gateway=INFO
logging.level.reactor.netty=INFO
logging.level.org.springframework.security=INFO

# ============================================
# CONFIGURACIÓN DE SEGURIDAD
# ============================================
# URI del JWK Set de Keycloak para la validación de tokens
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://keycloak:8080/realms/tesina/protocol/openid-connect/certs

# ============================================
# ENRUTAMIENTO Y DESCUBRIMIENTO DE SERVICIOS
# ============================================
# Habilitar el localizador de descubrimiento de servicios.
# Esto permite al gateway crear rutas automáticamente para los servicios descubiertos.
# En un entorno Docker Compose, los servicios se descubren por su nombre de servicio (ej: 'users-service').
spring.cloud.gateway.discovery.locator.enabled=true
# Convertir el ID del servicio a minúsculas para que coincida con el nombre del host.
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# ============================================
# CONFIGURACIÓN DE SWAGGER UI
# ============================================
# No se necesita configuración explícita de URLs para cada microservicio.
# SpringDoc utilizará el 'discovery-locator' para encontrar los endpoints de OpenAPI
# de todos los microservicios registrados y los agrupará en la UI del gateway.

# Deshabilitar la generación de documentación para el propio gateway
springdoc.api-docs.enabled=false

# Ruta para la UI de Swagger en el gateway
springdoc.swagger-ui.path=/swagger-ui.html

# ============================================
# OTROS
# ============================================
# Actuator
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always
management.health.defaults.enabled=true

# Rate limiting (sin cambios)
app.rate-limit.default-capacity=20
app.rate-limit.default-refill-tokens=10
app.rate-limit.routes[/api/usuarios/create].capacity=10
app.rate-limit.routes[/api/usuarios/create].refill-tokens=5
app.rate-limit.routes[/api/usuarios/list/**].capacity=40
app.rate-limit.routes[/api/usuarios/list/**].refill-tokens=20